"use strict";require('dotenv').config();const axios = require('axios').default;axios.get('https://api.cloudflare.com/client/v4/zones/' + process.env.CLOUDFLARE_ZONEIDENTIFIER + '/dns_records', {	headers: {		'Authorization': 'Bearer ' + process.env.CLOUDFLARE_APIKEY,		'per_page': '100'	}}).catch((error) => {	console.error(error.response.data);	throw error;}).then((response) => {	if (response.data.success) {		response.data.result.forEach(function (dnsRecord) {			if (dnsRecord.name == process.env.CLOUDFLARE_UPDATEFOR) {				if (dnsRecord.type == 'A') {					updateCloudflareA(dnsRecord);				} else if (dnsRecord.type == 'AAAA') {					updateCloudflareAAAA(dnsRecord);				}			}		});	}});function updateCloudflareA(dnsRecord) {	if (dnsRecord) {		axios.get('https://api.ipify.org/?format=json').catch((error) => {			console.error(error.response.data);			throw error;		}).then((response) => {			const validIp = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;			if (validIp.test(response.data.ip)) {				const currentIp = validIp.exec(response.data.ip)[0];				console.log(dnsRecord.type, currentIp);				axios.put('https://api.cloudflare.com/client/v4/zones/' + process.env.CLOUDFLARE_ZONEIDENTIFIER + '/dns_records/' + dnsRecord.id, JSON.stringify({					"type": dnsRecord.type,					"name": dnsRecord.name,					"content": currentIp,					"ttl": dnsRecord.ttl,					"proxied": dnsRecord.proxied				}), {						headers: {							'Content-Type': 'application/json',							'Authorization': 'Bearer ' + process.env.CLOUDFLARE_APIKEY					}				}).catch((error) => {					console.error(dnsRecord.type, error.response.data);					throw error;				});			}		});	}}function updateCloudflareAAAA(dnsRecord) {	if (dnsRecord) {		axios.get('https://api6.ipify.org/?format=json').catch((error) => {			console.error(error.response.data);			throw error;		}).then((response) => {			const validIp = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;			if (validIp.test(response.data.ip)) {				const currentIp = validIp.exec(response.data.ip)[0];				console.log(dnsRecord.type, currentIp);				axios.put('https://api.cloudflare.com/client/v4/zones/' + process.env.CLOUDFLARE_ZONEIDENTIFIER + '/dns_records/' + dnsRecord.id, JSON.stringify({					"type": dnsRecord.type,					"name": dnsRecord.name,					"content": currentIp,					"ttl": dnsRecord.ttl,					"proxied": dnsRecord.proxied				}), {					headers: {						'Content-Type': 'application/json',						'Authorization': 'Bearer ' + process.env.CLOUDFLARE_APIKEY					}				}).catch((error) => {					console.error(dnsRecord.type, error.response.data);					throw error;				});			}		});	}}